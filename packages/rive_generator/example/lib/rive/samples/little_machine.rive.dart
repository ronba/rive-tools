// ignore_for_file: type=lint
// THIS FILE WAS AUTOMATICALLY GENERATED BY RIVE_GENERATOR. MODIFICATIONS WILL BE LOST WHEN THE GENERATOR RUNS AGAIN.
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:rive/rive.dart' as rive;
import 'package:rive/src/rive_core/state_machine_controller.dart' as core;

const assetsBaseFolder = "assets";

class Little_machine {
  final rive.RiveFile file;
  static String get assetPath {
    return (kIsWeb ? '' : assetsBaseFolder + '/') +
        'samples/little_machine.riv';
  }

  Little_machine._(this.file);

  static Future<Little_machine> load() async {
    final riveFile =
        rive.RiveFile.import(await rootBundle.load(Little_machine.assetPath));
    return Little_machine._(riveFile);
  }

  NewArtboard? _newArtboard;
  NewArtboard get newArtboard =>
      _newArtboard ??= NewArtboard(file.artboardByName(r'New Artboard')!);
}

class NewArtboard {
  final rive.Artboard artboard;
  NewArtboard(this.artboard);

  final animations = const NewArtboardAnimations();

  NewArtboardStateMachine1StateMachine getNewArtboardStateMachine1StateMachine(
      [core.OnStateChange? onStateChange]) {
    return NewArtboardStateMachine1StateMachine(this
        .artboard
        .stateMachineByName("State Machine 1", onChange: onStateChange)!);
  }
}

class NewArtboardAnimations {
  final String idlelight = r"Idle light";
  final String idle = r"Idle";
  final String work = r"Work";
  final String insert_data = r"Insert_data";
  const NewArtboardAnimations();
}

class NewArtboardStateMachine1StateMachine {
  final rive.StateMachineController controller;
  final rive.SMITrigger trigger1;
  NewArtboardStateMachine1StateMachine(this.controller)
      : trigger1 = controller.findInput<bool>(r'Trigger 1') as rive.SMITrigger;
}
